#permutations total 6

num = [1,2,3]
def permutation(num):
    if len(num) <= 1:
        return [num.copy()]

    res = []
    for i in range(len(num)):
        m = num.pop(0)
        # rest = num[:i]+num[i+1:]
        perm = permutation(num)
        for p in perm:
            p.append(m)
        res.extend(perm) #for appending "list"
        num.append(m)    #for adding an "element"
    return res

r = permutation(num)
print(r)



#Another Solution
num = [1,2,3] #combination [1,2],[1,3],[2,3]
k = 2         #permutation [1,2],[1,3],[2,3],[2,1],[2,3],[3,1],[3,2]


def permutation(num,k):
    res = []
    curr = []

    def backtrack():
        if len(curr) == len(num):
            res.append(curr.copy())

        for n in num:
            if n not in curr:
                curr.append(n)
                backtrack()
                curr.pop()

    backtrack()
    return res

r=permutation(num,k)
print(r)
