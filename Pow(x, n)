class Solution:
    def myPow(self, x: float, n: int) -> float:
        #Initial Approach
        #base cases
        # if n == 0: return 1
        # if n == 1: return x
        
        # count = abs(n)
        # res = x
        
        # while count>1:
        #     res *= x
        #     count-=1
        
        # if n < 0:
        #     res = 1/res
        
        # return res

        def function(base=x, exponent=abs(n)):
            if exponent == 0:
                return 1
            elif exponent % 2 == 0:
                return function(base * base, exponent // 2)
            else:
                return base * function(base * base, (exponent - 1) // 2)

        f = function()
        
        return float(f) if n >= 0 else 1/f
        
