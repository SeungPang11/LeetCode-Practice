# Check if Binary Tree is Complete or Not

class Node:
    def __init__(self, val):
        self.val = val
        self.left = None
        self.right = None

def countNode(root):
    if root == None:
        return 0
    return (1 + countNode(root.left) +  countNode(root.right))

def isComplete(root, index, num_node):
    if root == None:
        return True

    if index >= num_node:
        return False

    return (isComplete(root.left, (2*index)+1, num_node) and
            isComplete(root.right, (2*index)+2, num_node))


root = Node(1)
root.left = Node(2)
root.right = Node(3)
root.left.left = Node(4)
root.left.right = Node(5)
#root.right.right = Node(6)

node_count = countNode(root)
index = 0

if isComplete(root, 0, node_count):
    print("Binary Tree is Complete")
else:
    print("Binary Tree is NOT Complete")
