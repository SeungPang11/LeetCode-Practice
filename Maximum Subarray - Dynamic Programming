#Solution 1
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:   
        arr = []
        arr.append(nums[0])
        
        maxSum = arr[0]
        
        for i in range(1, len(nums)):
            
            # arr[i] represents the largest sum of all subarrays 
            # then its value should be the larger one between nums[i]
            # arr[i-1] + nums[i] (largest sum plus curr num)
            # comparing each one with current largest sum
            
            arr.append(max(arr[i-1] + nums[i], nums[i]))
           
            # if arr[i] > maxSum then maxSum = arr[i].
            
            if arr[i] > maxSum:
                maxSum = arr[i]
        
        # Return the subarray has the largest sum.
        return maxSum       

#Solution 2
arr = [-2, -1, -3, 4, -1, 2, 1, -5, 4]
sum, maxSum = 0, arr[0]

for i in arr:
    sum = max(0, sum) + i
    maxSum = max(sum, maxSum)
print(maxSum)

