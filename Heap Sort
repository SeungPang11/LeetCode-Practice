#Heap Sort
#n = length of arr
#i = root

def heapify(arr, n, i):
  largest = i
  left = 2*i+1
  right = 2*i+2

  #check if left bigger
  if left < n and arr[left] > arr[largest]:
    largest = left

  #check if right bigger
  if right < n and arr[right] > arr[largest]:
    largest = right

  #swap if needed (largest is NOT root)
  if largest != i:
    arr[largest], arr[i] = arr[i], arr[largest]
    heapify(arr, n, largest)


def heapsort(arr):
  n = len(arr)

  #parent nodes heapify
  for i in range((n//2)-1, -1, -1):
    heapify(arr, n, i)
  
  #extract by largest
  for i in range(n-1, 0, -1):
    #last element (min) swap with root (max)
    arr[0], arr[i] = arr[i], arr[0]
    
    heapify(arr, i, 0)


arr = [5, 1, 3, 4]
heapsort(arr)
print(arr)
