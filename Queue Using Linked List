class Node:
    def __init__(self, val):
        self.val = val
        self.next = None

class Queue:
    def __init__(self):
        self.front = self.rear = None

    def isEmpty(self):
        return True if self.front == None else False

    def enqueue(self, val):
        temp = Node(val)

        if self.rear == None:
            self.front = self.rear = temp
            return

        self.rear.next = temp
        self.rear = temp

    # Disconnect front of the list
    def dequeue(self):
        if self.isEmpty():
            return

        temp = self.front
        self.front = temp.next

    def display(self):
        temp = self.front
        while temp != None:
            print(temp.val)
            temp = temp.next

if __name__ == "__main__":
    queue = Queue()
    queue.enqueue(1)
    queue.enqueue(2)
    queue.enqueue(3)
    queue.display()

    print("After dequeue")
    queue.dequeue()
    queue.dequeue()
    queue.display()
