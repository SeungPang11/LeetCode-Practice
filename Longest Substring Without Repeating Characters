# Solution 1 - Sliding Window

s="abcabcbb"

l = 0
res = 0
char = set()

for r in range(len(s)):
    while s[r] in char:
        char.remove(s[l])
        l+=1

    char.add(s[r])
    res = max(res, r-l+1)

print(r)

____


# Solution 2
class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        #mid = (len(s)-1)//2
        max_len = 0
        max_res = []
        l = 0

        for r in range(len(s)):
            while s[r] in max_res:
                max_res.remove(s[l])
                l += 1
            max_res.append(s[r])
            max_len = max(max_len, r - l + 1)
        return max_len

