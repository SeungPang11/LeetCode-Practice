# Stack using Linked List
class Node:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Stack:
    def __init__(self):
        self.head = None

    def isEmpty(self):
        return True if self.head == None else False

    # Add to the beginning of stack
    def push(self, val):
        if self.head == None:
            self.head = Node(val)
        else:
            new = Node(val)
            new.next = self.head
            self.head = new

    # Pop the beginning of stack
    def pop(self):
        if self.isEmpty():
            return None
        else:
            # Disconnect node
            pop_node = self.head
            self.head = self.head.next
            pop_node.next = None
            return pop_node.val

    def display(self):
        temp = self.head

        if self.isEmpty():
            print("Empty")

        else:
            while temp is not None:
                print(temp.val)
                temp = temp.next

if __name__ == "__main__":
    stack = Stack()
    stack.push(1)
    stack.push(2)
    stack.push(3)
    stack.display()

    stack.pop()
    stack.display()
