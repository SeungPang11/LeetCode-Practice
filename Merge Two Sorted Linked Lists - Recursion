# Merge Two Sorted Linked Lists
class Node:
    def __init__(self, val):
        self.val = val
        self.next = None

def traverse(root):
    temp = root
    while temp:
        print(temp.val)
        temp = temp.next

def merge(L1, L2):
    temp1 = None

    if L1 == None: return L2
    if L2 == None: return L1

    if L1.val <= L2.val:
        temp = L1
        temp.next = merge(L1.next, L2)
    else:
        temp = L2
        temp.next = merge(L1, L2.next)

    return temp

if __name__ == '__main__':
    # L1 = 1->3->5
    # L2 = 2->4->6->7

    L1 = Node(1)
    L1.next = Node(3)
    L1.next.next = Node(5)

    L2 = Node(2)
    L2.next = Node(4)
    L2.next.next = Node(6)
    L2.next.next.next = Node(7)

    merged = merge(L1, L2)
    traverse(merged)
